from Crypto.Cipher import AES
from Crypto.Util.Padding import unpad

def binary_string_to_bytes(binary_string):
    return int(binary_string, 2).to_bytes((len(binary_string) + 7) // 8, byteorder='big')

session_key_binary = '10111101101111101111111001011110110111001001101001001111000010110101010100011101101110100010011100001101111100100011100010110001'
session_key = binary_string_to_bytes(session_key_binary)
assert len(session_key) == 16

aes_key_challenge = "6adec6eeae8bcf69bdba1b05827d63f3c6d062a18cb168c2e2be215a814e375df28ab12da0bac48f958b9f361e014bb993af3ce34746e1c2ffc5ec9c4c140c99"
aes_key_iv = bytes.fromhex(aes_key_challenge[:32])
aes_key_ct = bytes.fromhex(aes_key_challenge[32:])

aes_key = unpad(AES.new(key=session_key, iv=aes_key_iv, mode=AES.MODE_CBC).decrypt(aes_key_ct), 16)

data_challenge = 'bc0dd7bbfe794996c9c0848d143d364cd81d9f49eccd5a131557528852bb7811cd2a679614bc0b7a19e0a9f419fb27e31fee7dc4f1e34d905667c3310f00f2f091c4b39979fe53cd3b04b290cf1b3b159659f79411eb8f6e3a145265e75cacd19457764963ffd52702880115b07373eee1afc2a1ca6d11694f5e48c24512c6ffb17c3bb60d6f4f3510742176b89b31a8db9d3103222f585cd245e4f15ec1aa3b64a471958798ad2fbcef6cf9ab458073baecba8b78b585663f17f4ca9087a4a7e70d417dfffa2d7eba1b6bcf1ddcc2d093aea3a2d7c2692394588094ddf75822db2860a1d89929ac82ffa28b67d81b2d7d28e6d65cf80b9a041576e5ae0ecbb8e01d5ec9ca464c039564a8ee81f530d606cc346a3595ce01107e36d8d9692558489300d49d0277332bc68dbe29c5d726afb67402af38de9f5ebc432f62a064f6f0264f5743455ee4a85f456c47362d3645940a174abccbe3019837352b4124ace00b4caec6999afba2c3f30c0bd67f258726e47335125b0a450fc3b8ca1da8f108826d4ef797aa0a543716d0d61f5f4ccebedf9217ad917d84c24e05f5db352304ef5855d047eeb951e61922f8bc8e795f0d250e6bf3a4c1c739d016a098a81a6872099f9b6d4093514c13eb89b22b3a37db1316516eddc7a882c5a1f62951280c86b60beff1a7182868ae6722e9d6ddbde8bcc1eb5a04669b727a1188064b1cc8a5856b5365efb1dc1173a6f3cabef7863693a31a903929d0918faf08a208e6b147e1fd362c31bf75cdc8f1cb3841b42e375c839f065a26a5c689092e7e3ae65e1a3087b3af8240ab2e4aa5f4ba0c3028e1c146991f6048ebefcfb04a572bd889c9ebcec3e80445b4d19e686ef2765c14a4506ea7268927a99afb0b48383cd7c4ea7df83446377204a0805c837216a25613a25a2213bd6019dfa034d846ef3e2c17c423392d4e065a885a9e7ab44a3e6cae3c070fd152ae9bd63a7a886c8719c97a09feaef18739aea4e3eef8a0b259c64c413d0b5114eaf7e0be26590932384b8085152fad039f5acde23dbb4fa9406d8475a81272208e9aa18f9d6571f2b2d0b52f7b73df8eba87d3f8cff966c0c5aaa55fbd0c30cc24a035fa15c1e56ed5cbb9dc0c6bbe50ce697b58da0d05349489e853976dc17d484e7bb6250a7e1895690fae6f07f74b4ce793d56e063b89cafe30e729543c4e6656df750640ceb8e6afafa8cad54069a4f037973668efa3263b2cb4b8f124fb898b309549bfc574e23354e11102856c64293823bf6ec39731588cfd64c3c8f585d62426388521105bc58dda0aa8159c62dfc6285ce67e8b925d6cba1202299167974739ed5e987e50e52209a9162084a21d7104b343a07f3454a74537a4b90826e78d8eab9e7a14bf'

data_iv = bytes.fromhex(data_challenge[:32])
data_ct = bytes.fromhex(data_challenge[32:])

pt = unpad(AES.new(aes_key, AES.MODE_CBC, data_iv).decrypt(data_ct), 16)
print(pt.decode())